<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2022/03/26/d95d7e09.html</url>
    <content><![CDATA[<h6 id="历时两天终于把我的小破站建成了"><a class="markdownIt-Anchor" href="#历时两天终于把我的小破站建成了">#</a> 历时两天，终于把我的小破站建成了。</h6>
<h6 id="小破站的初心就是为了记录自己学习情况遇到的问题进行总结以及记录生活"><a class="markdownIt-Anchor" href="#小破站的初心就是为了记录自己学习情况遇到的问题进行总结以及记录生活">#</a> 小破站的初心就是为了记录自己学习情况，遇到的问题进行总结，以及记录生活。</h6>
]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Git详细使用方法</title>
    <url>/2022/04/04/43d2d741.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>计算机科学</category>
        <category>技术杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>Python组合数据类型</title>
    <url>/2022/04/08/cd7b33aa.html</url>
    <content><![CDATA[<div class="note info">
<p>每天记录自己学习情况</p>
</div>
<h2 id="列表检查是否存在重复元素"><a class="markdownIt-Anchor" href="#列表检查是否存在重复元素">#</a> 列表检查是否存在重复元素</h2>
<p>编写函数，用列表为参数，判断有无重复元素，若有就返回 <code>True</code> ，否则，返回 <code>False</code> ，并调用函数来验证。可使用以下列表来进行验证：</p>
<p>lst_1 = [1, 3, 4, 5, 1, 45]</p>
<p>lst_2 = [‘N’, ‘B’, ‘A’, ‘2022’]</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>lst_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre>lst_2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'2022'</span><span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre>lst_1<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="4"></td><td><pre>lst_2<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="5"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="6"></td><td><pre><span class="token keyword">def</span> <span class="token function">prin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="7"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"["</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="8"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="9"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="10"></td><td><pre>        <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="11"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span>end<span class="token operator">=</span><span class="token string">","</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="12"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="13"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"]"</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">"  "</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="14"></td><td><pre>    <span class="token keyword">for</span> l <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="15"></td><td><pre>        <span class="token keyword">if</span> x<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">==</span> x<span class="token punctuation">[</span>l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="16"></td><td><pre>            FF <span class="token operator">=</span> <span class="token string">"有重复元素"</span></pre></td></tr><tr class="marked"><td data-num="17"></td><td><pre>            <span class="token keyword">break</span></pre></td></tr><tr class="marked"><td data-num="18"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="19"></td><td><pre>            FF <span class="token operator">=</span> <span class="token string">"无重复元素"</span></pre></td></tr><tr class="marked"><td data-num="20"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>FF<span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="21"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="22"></td><td><pre>prin<span class="token punctuation">(</span>lst_1<span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="23"></td><td><pre>prin<span class="token punctuation">(</span>lst_2<span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="集合检查是否存在重复元素"><a class="markdownIt-Anchor" href="#集合检查是否存在重复元素">#</a> 集合检查是否存在重复元素</h2>
<p>编写函数，用列表为参数，利用集合元素的无重复性来判断列表有无重复元素，若有就返回 <code>True</code> ，否则，返回 <code>False</code> ，并调用函数来验证</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>lst_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4445</span><span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre>lst_2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'2022'</span><span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="4"></td><td><pre><span class="token keyword">def</span> <span class="token function">lstt</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="5"></td><td><pre>    lst1 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="6"></td><td><pre>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>lst1<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="7"></td><td><pre>        <span class="token keyword">return</span> <span class="token boolean">True</span></pre></td></tr><tr class="marked"><td data-num="8"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="9"></td><td><pre>        <span class="token keyword">return</span> <span class="token boolean">False</span></pre></td></tr><tr class="marked"><td data-num="10"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="11"></td><td><pre>result1 <span class="token operator">=</span> lstt<span class="token punctuation">(</span>lst_1<span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="12"></td><td><pre>result2 <span class="token operator">=</span> lstt<span class="token punctuation">(</span>lst_2<span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="13"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="14"></td><td><pre><span class="token keyword">def</span> <span class="token function">print1</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> lst<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="15"></td><td><pre>    <span class="token keyword">if</span> result <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="16"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'列表：&#123;&#125;有 重复元素'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="17"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="18"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'列表：&#123;&#125;无 重复元素'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="19"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="20"></td><td><pre>print1<span class="token punctuation">(</span>result1<span class="token punctuation">,</span> lst_1<span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="21"></td><td><pre>print1<span class="token punctuation">(</span>result2<span class="token punctuation">,</span> lst_2<span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="生日悖论"><a class="markdownIt-Anchor" href="#生日悖论">#</a> 生日悖论</h2>
<p>现假定一年只有 <code>365</code>  天，不考虑闰年情况。请先阅读<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclOTQlOUYlRTYlOTclQTUlRTYlODIlOTYlRTglQUUlQkEvMjcxNTI5MA==">生日悖论</span> 相关知识，再按下列要求编程模拟检验：<br>
(1) 编写函数 <code>createBirthday()：</code> 使用随机函数生成某人的生日，结果为字符串，由 <code>01.01</code>  到 <code>12.31</code>  表示，月份。天均为两位数，中间用点号 (.) 隔开；<br>
(2) 编写函数 <code>groupBirthdays(n)：</code> 调用 <code>createBirthday()</code>  生成团队成员的生日，用列表方式返回，其中： <code>n为</code> 团队成员数；<br>
(3) 主函数：输入团队成员数，调用 <code>groupBirthdays(n)</code>  和创建 <code>isRepeat()</code>  函数查重，模拟 <code>100000</code>  次，计算至少有两人生日相同的比例</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token keyword">import</span> random <span class="token keyword">as</span> r</pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre>num <span class="token operator">=</span> <span class="token number">100000</span></pre></td></tr><tr class="marked"><td data-num="4"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="5"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="6"></td><td><pre><span class="token keyword">def</span> <span class="token function">createBirthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="7"></td><td><pre>    birthday <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="8"></td><td><pre>    month <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rjust<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="9"></td><td><pre>    day <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.31</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="10"></td><td><pre>    birthday <span class="token operator">=</span> month <span class="token operator">+</span> day</pre></td></tr><tr class="marked"><td data-num="11"></td><td><pre>    <span class="token comment"># print(birthday)</span></pre></td></tr><tr class="marked"><td data-num="12"></td><td><pre>    <span class="token comment"># print(type(birthday))</span></pre></td></tr><tr class="marked"><td data-num="13"></td><td><pre>    <span class="token keyword">return</span> birthday</pre></td></tr><tr class="marked"><td data-num="14"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="15"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="16"></td><td><pre><span class="token keyword">def</span> <span class="token function">groupBirthdays</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="17"></td><td><pre>    lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="18"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="19"></td><td><pre>        lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span>createBirthday<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="20"></td><td><pre>    <span class="token comment"># print(lst)</span></pre></td></tr><tr class="marked"><td data-num="21"></td><td><pre>    <span class="token keyword">return</span> lst</pre></td></tr><tr class="marked"><td data-num="22"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="23"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="24"></td><td><pre><span class="token keyword">def</span> <span class="token function">isRepeat</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="25"></td><td><pre>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="26"></td><td><pre>        <span class="token keyword">return</span> <span class="token boolean">False</span>  <span class="token comment"># 不重复</span></pre></td></tr><tr class="marked"><td data-num="27"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="28"></td><td><pre>        <span class="token keyword">return</span> <span class="token boolean">True</span>  <span class="token comment"># 重复</span></pre></td></tr><tr class="marked"><td data-num="29"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="30"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="31"></td><td><pre><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="32"></td><td><pre>    x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入团队人数："</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="33"></td><td><pre>    nums <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr class="marked"><td data-num="34"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="35"></td><td><pre>        times <span class="token operator">=</span> isRepeat<span class="token punctuation">(</span>groupBirthdays<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="36"></td><td><pre>        <span class="token keyword">if</span> times <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="37"></td><td><pre>            nums <span class="token operator">+=</span> <span class="token number">1</span></pre></td></tr><tr class="marked"><td data-num="38"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="39"></td><td><pre>            <span class="token keyword">continue</span></pre></td></tr><tr class="marked"><td data-num="40"></td><td><pre>    y <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>nums <span class="token operator">/</span> <span class="token number">100000</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="41"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"假设一个团队有&#123;&#125;人，用随机模拟&#123;&#125;次，其中至少有两人生日相同的比例为&#123;&#125;%"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="42"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="43"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="44"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="45"></td><td><pre>    main<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="文字出现频率"><a class="markdownIt-Anchor" href="#文字出现频率">#</a> 文字出现频率</h2>
<p>编写程序，对文档” 习总书记在北京大学师生座谈会上的讲话.txt” 进行分析，按出现频率的降序打印字符 (前 20 位)。</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token keyword">import</span> jieba</pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre></pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre>txt <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:\\习总书记在北京大学师生座谈会上的讲话 .txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'gbk'</span><span class="token punctuation">,</span>errors<span class="token operator">=</span><span class="token string">'ignore'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="4"></td><td><pre>lst <span class="token operator">=</span> jieba<span class="token punctuation">.</span>lcut<span class="token punctuation">(</span>txt<span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="5"></td><td><pre>cout <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></pre></td></tr><tr class="marked"><td data-num="6"></td><td><pre><span class="token keyword">for</span> ls <span class="token keyword">in</span> lst<span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="7"></td><td><pre>    ls <span class="token operator">=</span> ls<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="8"></td><td><pre>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="9"></td><td><pre>        <span class="token keyword">continue</span></pre></td></tr><tr class="marked"><td data-num="10"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="11"></td><td><pre>        cout<span class="token punctuation">[</span>ls<span class="token punctuation">]</span> <span class="token operator">=</span> cout<span class="token punctuation">.</span>get<span class="token punctuation">(</span>ls<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span></pre></td></tr><tr class="marked"><td data-num="12"></td><td><pre>items <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>cout<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="13"></td><td><pre>items<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></pre></td></tr><tr class="marked"><td data-num="14"></td><td><pre><span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="15"></td><td><pre>    word<span class="token punctuation">,</span> count <span class="token operator">=</span> items<span class="token punctuation">[</span>item<span class="token punctuation">]</span></pre></td></tr><tr class="marked"><td data-num="16"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"词语:【&#123;&#125;】,出现次数:&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><div class="note warning">
<p>以上如有错误，欢迎留言指出</p>
</div>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>每日一更</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>每日一更</tag>
        <tag>python实验</tag>
      </tags>
  </entry>
  <entry>
    <title>git push origin master失败</title>
    <url>/2022/04/08/c32e96d4.html</url>
    <content><![CDATA[<details><summary>primary 我要怎么备份blog文件？？？</summary><div>
<div class="note primary">
<p>这几天在想，万一那天我想在别的电脑上写博客，或者是我电脑突然抽风硬盘坏了，我的博客数据岂不是没了？？？</p>
<p>又或者我什么时候不小心删错了文件，岂不是出大问题？？？</p>
</div>
<p>带着这个问题，我一开始是找了几个 PC 端自动本地备份的程序，但效果不太理想。</p>
<p>定时备份：不能保证你在设置定时的这段时间内进行 <code>hexo d</code>  多少次，如果定时备份的时间设置过短，理论上对硬盘的读写会拖慢其他程序的运行。</p>
<p>所以在想，如果有一个程序可以监控我 <code>blog</code>  下的文件变化，每变化一次就进行记录一次，进行增量备份一次，这是我想到最完美的办法，带着这个想法，我似乎找到了一个方法。</p>
</div></details>
<details><summary>danger 持续集成服务</summary><div>
<p>此处引用百度百科：持续集成是一种软件开发实践，即团队开发成员经常集成他们的工作，通常每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。</p>
<p>简单来说，就是这个服务绑定了 GitHub，我们每提交一次代码到 GitHub，它都会抓取一次我们的仓库，检查新代码，然后提供一个运行环境，执行测试，完成构建，还能部署到服务器。</p>
</div></details>
<p>然后我这次在准备提交文件到我新建的 <code>hexo-backups</code>  仓库的时候，出错了，就记录一下错误。</p>
<h2 id="git-pash-origin-master失败"><a class="markdownIt-Anchor" href="#git-pash-origin-master失败">#</a>  <code>git pash origin master</code>  失败</h2>
<p>第一次遇见这个问题，我还以为是 <code>.gitignore</code>  文件的 <code>.DS_Store</code>  文件不存在？然后我删掉这个文件，好像还是继续报一样的错误，然后排除这个可能。</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204082309.jpg" alt="" title="git pash origin master失败"></p>
<h2 id="新建文件测试"><a class="markdownIt-Anchor" href="#新建文件测试">#</a> 新建文件测试</h2>
<p>然后新建文件测试一下，看是不是文件没有被加载到缓存区，发现结果已经加载到缓冲区了</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204082313.jpg" alt="" title="测试文件"></p>
<h2 id="添加origin"><a class="markdownIt-Anchor" href="#添加origin">#</a> 添加 origin</h2>
<p>一开始我没有删除旧的 origin，我直接添加了，直接报错。实际操作应该删除旧的 origin 的，再添加新的 origin</p>
<figure class="highlight bash"><figcaption data-lang="bash"><span>删除origin</span></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token comment"># 删除 origin</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre><span class="token function">git</span> remote remove origin</pre></td></tr></table></figure><figure class="highlight bash"><figcaption data-lang="bash"><span>添加origin</span></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token comment"># 此处的 git@github.com:0000rookie/Hexo-backups.git 是仓库的 SSH</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre><span class="token function">git</span> <span class="token function">add</span> git@github.com:0000rookie/Hexo-backups.git</pre></td></tr></table></figure><figure class="highlight bash"><figcaption data-lang="bash"><span>查看origin</span></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">git</span> origin -v</pre></td></tr></table></figure><p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204082315.jpg" alt="" title="添加控制器"></p>
<h2 id="重新commit"><a class="markdownIt-Anchor" href="#重新commit">#</a> 重新 commit</h2>
<p>是的，我真的以为我只是修改一下 <code>origin</code>  就处理好了</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204082324.jpg" alt="" title="重新commit"></p>
<h2 id="git-push-f-origin-master提交成功"><a class="markdownIt-Anchor" href="#git-push-f-origin-master提交成功">#</a>  <code>git push -f origin master</code>  提交成功</h2>
<p><code>git push -f origin master</code>  就成功了</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204082326.jpg" alt="" title="git push -f origin master"></p>
<div class="note success">
<p>目前我还不知道是什么原因导致错误，如果你知道，欢迎留言告诉我！！！</p>
</div>
<div class="note warning">
<p>以上如有错误，欢迎留言指出</p>
</div>
]]></content>
      <tags>
        <tag>每日一更</tag>
        <tag>教程</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>为博客添加免费的CDN加速</title>
    <url>/2022/04/08/edaa94fb.html</url>
    <content><![CDATA[<h2 id="设置statics"><a class="markdownIt-Anchor" href="#设置statics">#</a> 设置 <code>statics</code></h2>
<p>在根目录或者 <code>themes</code>  下 <code>_config.yml</code>  文件下配置</p>
<figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token key atrule">格式：statics</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/账户名/仓库名/</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">statics</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/0000rookie/github.io/</pre></td></tr></table></figure><p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204081139.jpg" alt=""></p>
<h2 id="刷新cdnjsdelivr"><a class="markdownIt-Anchor" href="#刷新cdnjsdelivr">#</a> 刷新 <code>CDN.jsDelivr</code></h2>
<p>打开浏览器输入你 <code>statics</code>  的资源路径，回车刷新一下。</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>https://cdn.jsdelivr.net/gh/0000rookie/github.io/</pre></td></tr><tr><td data-num="2"></td><td><pre>https://cdn.jsdelivr.net/gh/账户名/仓库名/</pre></td></tr></table></figure><div class="note info">
<p>如果成功了是以下的样子，如果没出现，等几分钟再刷新一下</p>
</div>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204081149.jpg" alt=""></p>
<div class="note info">
<p>这个 <code>url</code>  和 <code>root</code>  是不用管的，一开始我是设置 <code>url</code>  的，但是网站没有出现样式，访问 <code>cdn</code>  的时候返回是无定义</p>
</div>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204081142.jpg" alt=""></p>
<div class="note info">
<p>如果样式还是没出现，打开你网站， <code>F12</code>  调试一下，修改一下你的 <code>CSS</code>  路径，看看是哪里出问题，看报错信息是什么</p>
</div>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204081152.jpg" alt=""></p>
<div class="note info">
<p>如果是出现这个错误，说明你的 <code>statics</code>  路径填错了，找不到你的路径文件</p>
</div>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204081154.jpg" alt=""></p>
<div class="note warning">
<p>以上如有错误，欢迎留言指出</p>
</div>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>每日一更</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>每日一更</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>添加开机自启程序</title>
    <url>/2022/04/07/2cc8588f.html</url>
    <content><![CDATA[<h2 id="键盘点击winr"><a class="markdownIt-Anchor" href="#键盘点击winr">#</a> 键盘点击 <code>win+R</code></h2>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204071930.jpg" alt=""></p>
<h2 id="在窗口输入shellstartup"><a class="markdownIt-Anchor" href="#在窗口输入shellstartup">#</a> 在窗口输入 <code>shell:startup</code></h2>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre>shell:startup</pre></td></tr></table></figure><p><strong>打开是这个路径</strong>，把你想要开机自启的软件快捷方式拖到这个路径下，以后电脑开机就会自动启动这个程序了</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204071937.jpg" alt=""></p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204071936.jpg" alt=""></p>
<div class="note warning">
<p>以上如有错误，欢迎留言指出</p>
</div>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>技术杂谈</category>
        <category>一个小技巧</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>生活小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>文章Front-Matter参数设置</title>
    <url>/2022/04/04/a7032750.html</url>
    <content><![CDATA[<h2 id="h2so4置顶文章"><a class="markdownIt-Anchor" href="#h2so4置顶文章">#</a> <span class="red">H<sub>2</sub>SO<sub>4</sub></span> 置顶文章</h2>
<figure class="highlight raw"><figcaption data-lang=""><span>w Front-Matter</span></figcaption><table><tr><td data-num="1"></td><td><pre>sticky: true</pre></td></tr></table></figure><hr>
<h2 id="h2so4开启评论"><a class="markdownIt-Anchor" href="#h2so4开启评论">#</a> <span class="red">H<sub>2</sub>SO<sub>4</sub></span> 开启评论</h2>
<figure class="highlight raw"><figcaption data-lang=""><span>w Front-Matter</span></figcaption><table><tr><td data-num="1"></td><td><pre>comments: true</pre></td></tr></table></figure><hr>
<h2 id="h2so4文章标签"><a class="markdownIt-Anchor" href="#h2so4文章标签">#</a> <span class="red">H<sub>2</sub>SO<sub>4</sub></span> 文章标签</h2>
<figure class="highlight raw"><figcaption data-lang=""><span>w Front-Matter</span></figcaption><table><tr><td data-num="1"></td><td><pre>tags: </pre></td></tr><tr><td data-num="2"></td><td><pre>  - 博客</pre></td></tr><tr><td data-num="3"></td><td><pre>  - 教程</pre></td></tr></table></figure><hr>
<h2 id="h2so4文章标题"><a class="markdownIt-Anchor" href="#h2so4文章标题">#</a> <span class="red">H<sub>2</sub>SO<sub>4</sub></span> 文章标题</h2>
<figure class="highlight raw"><figcaption data-lang=""><span>w Front-Matter</span></figcaption><table><tr><td data-num="1"></td><td><pre>title: 文章 Front-Matter 参数设置</pre></td></tr></table></figure><hr>
<h2 id="h2so4文章分类"><a class="markdownIt-Anchor" href="#h2so4文章分类">#</a> <span class="red">H<sub>2</sub>SO<sub>4</sub></span> 文章分类</h2>
<figure class="highlight raw"><figcaption data-lang=""><span>w Front-Matter</span></figcaption><table><tr><td data-num="1"></td><td><pre>categories:</pre></td></tr><tr><td data-num="2"></td><td><pre>  - 计算机科学</pre></td></tr><tr><td data-num="3"></td><td><pre>  - 博客</pre></td></tr><tr><td data-num="4"></td><td><pre>  - 博客的食用方法</pre></td></tr></table></figure><hr>
<div class="note warning">
<p>以上如有错误，欢迎留言指出</p>
</div>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>博客的食用方法</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>这是大二下的各科作业</title>
    <url>/2022/04/08/2b5f7ebb.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容">
  <script id="hbeData" type="hbeData" data-hmacdigest="736d6f317de652675e92c562c9d559a1a4933fa5da6633bb287a93596b9f26cc">fc8ec58bcd304fc0f97ab129566d154af1d2a39ab32988b65a03f96755db586b87c750b1a5859def1c25d72c08186c80ac1f1b603ec24b6d40ce078a19cf4ed63b8b3c89281368284ed5acd62cab190e9c8bab2fe4d1765ffaa3769cbf699834be2ed0fbcc9fe46d07a65759e40b49ee59d107702bf0b469a0462f78f31e766b18f3a153c653ac1ad4ab8836b343844227b31f6c898d1e46d0da787b9d58dbe8114036fd7da0e08f8817b51a6b26661006a228f59c179587570624d1b08486876e4257edbaa0f0d5c2cf0d8f1eea49ba5b643c84122c99cfea74e7111df955af1e587963b806a1c979ae02d61d62a0f6f193f8d890a31df3abe5bc77e581d9ccf1c0592fbdc04d0c6b79f91e21d636b9b8986224515d6a7671132330cddb9c4a5e758fcd7ec41d24d8a749a0ddd2bb9ab993a7f5a70d8051da001c5cc574616916c87145b6ea5d991bfe663c48f3d52cc9e2defac07737be9d0c0b9c2f6176c43c560e1012d1a2b58a5cce83f997de32e46b42e8900f216bf9ac83bd5883d3f83bb3e7238cbf3b62c152d751fe30d9925ed87b157e1bbee9aa3990e8b78f3d7519875fe1de884eec368562a936a2e9d613f3f112258f85dfb93a3746817e00d90185dae4e805dfbf455b5c239b54b33b1595247ac059c9db5283920ed3a474b1c131ebb191ba09fe400fbcc3c3d4e7bed94267f78debaaa5378abe94f47deea417d56a30cf29c22c5630a185aef48d6ac2be2c4c8496d986b70472dbff913ca04bd324c8e9d11ac3efa565c8d50e62bbbcf6e8a782d00bc58cb7fdf291f95ae22fd3fca5350e0f778b5fdafa23528d16d543b523f6a32087773d23577f02f23ac7f32e25b8c6e5c3ea7787ca23c8921300ecd2c46966aa1b19140d68f7920ad378342403bfc41473a362694962b41c2b148aebe488735787d4da4e5035a6d92397fdbfbee957de90027ab21203c3f0801d6c2bbbcbad3b65732c174c47fa4e2b29410846a0996f4eb893eb9d1bb33d33d698c90f9aa63d687302a1929fc2e3c520ef0d78a434685a9bdbad279fe7bddfd8351f519df2a0a4499ecccfd36b2fa070acc95854d860c73591cbc84d912b7145be038397728196a093d9e9b6c91c98e734b477442b979cd2d402ecc037d5e7eaf810257422352057a654ae1948f38156e7a0f2103dc9a2976ff17785887a07b94a95cce95bc1b40c5de916eef4107bbbc0a151d4a57dd8c64a8a30b3159bb28d39c2eaa9d37d3ce75e351717cc2efe3a2471e3ba02d992c3535c52f5b815c7b60fec10c6a9145d5d725443eb326e0892085ffa16ef202c5a6451235355869cdaf5e1d28d0c5bab9b0e0929c79725d5abd7d43c7b1d6e00661c8ad12b7b5697aa6e5f38b27300a0e473500e38547844a87bd4785176034a9c731b928c89c4f639601241a3580d027d4a50412e4b57c8e6656d86a8afaa4388d8292fb33517227a2385b413fae669615ff901627e921eafd0827a700f8108f8965a345788b4d0cc4ea866dfd62ea5410c5ab55d04b50d23d4fbac0865fd1a1dba9c25e9f71714d780fca0b04bfc0453840610d2a6514cd9b8c2dcaee4898cda75964ea35778e9879fbf1febe7a48b45a9958d2cbc207f43d998fe7af70b6db1a52b049bd3cf10827c52e7f0ac702e981ad5047db75a2fe65558fb68d6cca366d656e36a4c6d2748b10731831a01abdab48c62bc55209a8be77ae5a438359ee304f61fc165533bce421522edff8c73b91df590a4d7664b582dbf9cd63b819a38d8dedb7a00713f8d1903e0cc96c159a11312436c5b53a7734feb2648481b1d6263841bf3c62002</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，私の班级は？</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>计算机科学</category>
        <category>每日一更</category>
      </categories>
  </entry>
  <entry>
    <title>关于shoka主题食用技巧</title>
    <url>/2022/04/03/5d5981b0.html</url>
    <content><![CDATA[<h2 id="首页置顶文章"><a class="markdownIt-Anchor" href="#首页置顶文章">#</a> 首页置顶文章</h2>
<figure class="highlight markdown"><figcaption data-lang="markdown"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token front-matter-block"><span class="token punctuation">---</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 置顶文章</pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre><span class="token key atrule">sticky</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">---</span></span></pre></td></tr></table></figure><h2 id="关闭文章评论"><a class="markdownIt-Anchor" href="#关闭文章评论">#</a> 关闭文章评论</h2>
<figure class="highlight markdown"><figcaption data-lang="markdown"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token front-matter-block"><span class="token punctuation">---</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 开启文章评论</pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre><span class="token key atrule">comment</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">---</span></span></pre></td></tr></table></figure><h2 id="关闭文章音乐播放器"><a class="markdownIt-Anchor" href="#关闭文章音乐播放器">#</a> 关闭文章音乐播放器</h2>
<figure class="highlight markdown"><figcaption data-lang="markdown"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token front-matter-block"><span class="token punctuation">---</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 关闭文章音乐播放器</pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre><span class="token key atrule">audio</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">---</span></span></pre></td></tr></table></figure><h2 id="个人头像配置"><a class="markdownIt-Anchor" href="#个人头像配置">#</a> 个人头像配置</h2>
<figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token key atrule">sidebar</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre>  <span class="token comment"># 侧边栏的位置</span></pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre>  <span class="token key atrule">position</span><span class="token punctuation">:</span> left</pre></td></tr><tr class="marked"><td data-num="4"></td><td><pre>  <span class="token comment">#position: right</span></pre></td></tr><tr class="marked"><td data-num="5"></td><td><pre>  <span class="token comment"># 替换默认头像，并在这里设置 url</span></pre></td></tr><tr class="marked"><td data-num="6"></td><td><pre>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> avatar.jpg</pre></td></tr><tr class="marked"><td data-num="7"></td><td><pre>  <span class="token comment"># 头像路径在 themes\shoka\source\images\avatar.jpg</span></pre></td></tr></table></figure><h2 id="底部widgets"><a class="markdownIt-Anchor" href="#底部widgets">#</a> 底部 widgets</h2>
<figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token key atrule">widgets</span><span class="token punctuation">:</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre>  <span class="token key atrule">random_posts</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 显示随机文章</span></pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre>  <span class="token key atrule">recent_comments</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 显示最近评论</span></pre></td></tr><tr class="marked"><td data-num="4"></td><td><pre>  <span class="token comment">#在 shoka/_config.yml 修改</span></pre></td></tr></table></figure><h2 id="note提示块"><a class="markdownIt-Anchor" href="#note提示块">#</a>  <code>note</code>  提示块</h2>
<pre><code class="language-mark:1,2-28">:::default
默认默认
:::

:::primary
基本基本
:::

:::info
提示提示
:::

:::success
成功成功
:::

:::warning
警告警告
:::

:::danger
危险危险
:::

:::danger no-icon
危险危险
:::
</code></pre>
<div class="note default">
<p>默认默认</p>
</div>
<div class="note primary">
<p>基本基本</p>
</div>
<div class="note info">
<p>提示提示</p>
</div>
<div class="note success">
<p>成功成功</p>
</div>
<div class="note warning">
<p>警告警告</p>
</div>
<div class="note danger">
<p>危险危险</p>
</div>
<div class="note danger no-icon">
<p>危险危险</p>
</div>
<h2 id="collapse折叠块"><a class="markdownIt-Anchor" href="#collapse折叠块">#</a> collapse 折叠块</h2>
<p>能基于  <code>markdown-it-container</code> <br>
 标签为：<br>
开始行	 <code>+++[风格颜色] [标题文字]</code> <br>
 结束行	 <code>+++</code></p>
<pre><code class="language-mark:1,2-42">+++ 默认默认 这里是一段文字
++ 下划线 ++
+++


+++primary 紫色
:::info
参考信息
:::

- 第一行
- 第二行
+++


+++info  蓝色
;;;id3 卡片 1
这里是卡片 1 的内容
;;;

;;;id3 卡片 2
这里是卡片 2 的内容
;;;
+++

+++success 绿色
&#123;% links %&#125;
- site: 優萌初華
  url: https://shoka.lostyu.me
  color: "#e9546b"
&#123;% endlinks %&#125;
+++

+++warning 黄色
!! 警告警告警告警告警告！！&#123;.bulr&#125;
[label]&#123;.label .success&#125;
+++

+++danger 红色
[danger]&#123;.label .danger&#125;
+++
</code></pre>
<details><summary>默认默认 这里是一段文字</summary><div>
<p>++ 下划线 ++</p>
</div></details>
<details class="primary"><summary>紫色</summary><div>
<div class="note info">
<p>参考信息</p>
</div>
<ul>
<li>第一行</li>
<li>第二行</li>
</ul>
</div></details>
<details class="info"><summary>蓝色</summary><div>
<div class="tab" data-id="id3" data-title="卡片 1">
<p>这里是卡片 1 的内容</p>
</div>
<div class="tab" data-id="id3" data-title="卡片 2">
<p>这里是卡片 2 的内容</p>
</div>
</div></details>
<details class="success"><summary>绿色</summary><div>
<div class="links"><div class="item" title="優萌初華" style="--block-color:#e9546b;"><span class="exturl image" data-url="aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=" data-background-image="https://cdn.jsdelivr.net/gh/0000rookie/github.io/images/404.png"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=">優萌初華</span>
          <p class="desc">https://shoka.lostyu.me</p>
          </div></div></div>
</div></details>
<details class="warning"><summary>黄色</summary><div>
<p>!! 警告警告警告警告警告！！{.bulr}<br>
<span class="label success">label</span></p>
</div></details>
<details class="danger"><summary>红色</summary><div>
<p><span class="label danger">danger</span></p>
</div></details>
<div class="note warning">
<p>以上如有错误，欢迎留言指出</p>
</div>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>博客的食用方法</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建博客常见的错误</title>
    <url>/2022/04/01/cdc2e518.html</url>
    <content><![CDATA[<h2 id="404错误"><a class="markdownIt-Anchor" href="#404错误">#</a> 404 错误</h2>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng20220401163558.png" alt="404"></p>
<h3 id="分两种情况"><a class="markdownIt-Anchor" href="#分两种情况">#</a> 分两种情况</h3>
<h4 id="还未修改域名"><a class="markdownIt-Anchor" href="#还未修改域名">#</a> 还未修改域名</h4>
<ol>
<li>
<p>打开 ``GitHub` 仓库看文件是否已经上传成功，成功如图。</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng20220401164116.jpg" alt=""></p>
</li>
<li>
<p>如果仓库是空的，说明你没上传成功。</p>
<ul>
<li>检查 <code>blog</code>  文件夹下的 <code>_config.yml</code>  文件 <code>deploy:</code>  的配置有没有正确。如下</li>
</ul>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>deploy:</pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre>  type: <span class="token function">git</span></pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre>  repo: git@github.com:0000rookie/github.io.git</pre></td></tr><tr class="marked"><td data-num="4"></td><td><pre>  branch: main</pre></td></tr></table></figure><ul>
<li>重新部署到 <code>github</code>  仓库。</li>
</ul>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>hexo clean  <span class="token comment">#清除缓存文件 db.json 和已生成的静态文件 public</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre>hexo g      <span class="token comment">#生成网站静态文件到默认设置的 public 文件夹 (hexo generate 的缩写)</span></pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre>hexo d      <span class="token comment">#自动生成网站静态文件，并部署到设定的仓库 (hexo deploy 的缩写)</span></pre></td></tr></table></figure><ul>
<li>
<p>在部署过程中，查看 git 窗口看有没有报错的地方，如有报错，查看报错内容，如果没有，此时查看 <code>github</code>  仓库有没有更新文件。</p>
</li>
<li>
<p>如果还是没看到有更新内容，看看 <code>github</code>  分支是不是 <code>main</code> ，有些同学的分支是 <code>master</code> ，需要选择分支和部署的分支一致</p>
</li>
</ul>
</li>
</ol>
<p>还有可能的错误是 <code>hexo</code>  安装有文件缺失，要重新安装一遍。打开 <code>E:\studyAPP\node_js\node_global</code>  路径插件是否成功安装 <code>Hexo</code>  插件了，如果没成功，那就重新安装一遍。</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli</pre></td></tr></table></figure><p>重装还是不行的话，大概率就是你的 Nodejs 系统环境没配好，重新回到第四篇配置 <code>Nodejs</code>  环境。</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204011654.jpg" alt="404"></p>
<p>如果成功安装 <code>Hexo</code>  插件了。再查看一下 <code>blog</code>  下的 <code>_config.yml</code>  文件， <code>deploy</code>  有没有设置正确，输入格式有没有正确 (每一个小红点都是空格)</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204011701.jpg" alt=""></p>
<p><strong>如果还是 404 页面</strong>，再检查一下 <code>hexo-deployer-git</code>  是不是安装成功，重新安装一遍</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save</pre></td></tr></table></figure><h3 id="已修改域名"><a class="markdownIt-Anchor" href="#已修改域名">#</a> 已修改域名</h3>
<p>大多数都是 <code>Blog/source/CNAME</code>  文件没有<strong>命名</strong>好或者是<strong>域名填写错误</strong></p>
<p><code>CNAME</code>  是没有后缀的文件</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204021406.jpg" alt=""></p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204021407.jpg" alt=""></p>
<p>如果不清楚该文件是不是有后缀的，可以这样打开选项查看</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204021412.jpg" alt=""></p>
<div class="note info">
<p>本文章是记录自己安装过程中遇到的错误，总结错误，今后再遇到错误也可以回头参考一下，本文还会继续更新</p>
</div>
<div class="note warning">
<p>以上如有错误，欢迎留言指出</p>
</div>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>搭博客常见错误</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第三篇：Git提交文件---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/b75a1db6.html</url>
    <content><![CDATA[<h2 id="配置git"><a class="markdownIt-Anchor" href="#配置git">#</a> 配置 git</h2>
<h4 id="一-绑定gitee"><a class="markdownIt-Anchor" href="#一-绑定gitee">#</a> 一、绑定 Gitee</h4>
<p>首先来简单介绍一下 SSH 协议</p>
<p><strong>SSH（安全外壳协议，Secure Shell 的缩写）是建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。简单来说，SSH 就是保障你的账户安全，将你的数据加密压缩，不仅防止其他人截获你的数据，还能加快传输速度。如果想详细了解的话，可以看这篇文章：详述 SSH 的原理及其应用 - CSDN，下面就详细介绍如何绑定 GitHub 和提交文件。</strong></p>
<p><strong>我们要用 git 上传文件到 GitHub 首先得利用 SSH 登录远程主机，而登录方式有两种：一种是口令登录；另一种是公钥登录。口令登录每次都要输入密码十分麻烦，而公钥登录就省去了输入密码的步骤，所以我们选择公钥授权。首先我们得在 GitHub 上添加 SSH key 配置，要想生成 SSH key，就要先安装 SSH，不过我们安装了 Git Bash，其应该自带了 SSH。检验一下是否安装 SSH，我们在新建的文件夹中右键打开 Git Bash：</strong></p>
<ol>
<li>
<p>新建一个文件夹 ``text`</p>
<p><img data-src="https://s2.loli.net/2022/03/30/Jz1dTG6SPkwlQ5p.jpg" alt=""></p>
</li>
<li>
<p>鼠标右击打开 <code>git Bash Here</code></p>
<p><img data-src="https://s2.loli.net/2022/03/30/Jz1dTG6SPkwlQ5p.jpg" alt=""></p>
</li>
<li>
<p>输入 <code>ssh</code>  检查使是否安装 <code>ssh</code></p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>ssh-keygen -t rsa</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/8RcNpfrZ2PEjtA7.jpg" alt=""></p>
<ol start="4">
<li>
<p>输入  <code>ssh-keygen -t rsa</code>  命令，表示 <code>RSA</code>  算法生成密钥，然后敲 4 次回车键，之后会生成两个文件，分别为密钥 <code>id_rsa</code>  和公钥 <code>id_rsa.pub</code></p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>ssh-keygen -t rsa</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/K3mfVxdr54IvaLJ.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/9fNDbOAVUBeWd8G.jpg" alt=""></p>
<p><strong>接下来我们要做的事情就是把公钥 <code>id_rsa.pub</code>  的内容添加到 <code> GitHub</code> 。复制公钥  <code>id_rsa.pub</code>  文件里的内容，你可以通过目录找到  <code>id_rsa.pub</code>  文件的位置，用记事本打开文件复制。</strong></p>
<ol start="5">
<li>打开  <code>id_rsa.pub</code>  文件复制</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/s39ZxPGuTDJLmwF.jpg" alt=""></p>
<ol start="6">
<li>打开 <code>github---&gt;settings---&gt;SSH and GPG keys---&gt;New SSH key</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/LhUzwCNnZGOXDl9.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/4vtGl98ehjRWKJd.jpg" alt=""></p>
<p><strong>粘贴内容进去</strong></p>
<p><img data-src="https://s2.loli.net/2022/03/30/i1b3hoFvzPWcUje.jpg" alt=""></p>
<p><strong>添加成功</strong></p>
<p><img data-src="https://s2.loli.net/2022/03/30/h7npjw9I8qOBaXA.jpg" alt=""></p>
<p><strong>验证是否成功，在 <code>Git Bash</code>  中输入 <code> ssh -T git@github.com</code>  验证</strong></p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">ssh</span> -T git@github.com</pre></td></tr></table></figure><p>首次需要输入 <code>yes</code></p>
<p><img data-src="https://s2.loli.net/2022/03/30/EHSFLzxKoIavPcr.jpg" alt=""></p>
<h4 id="二-接下来是提交文件"><a class="markdownIt-Anchor" href="#二-接下来是提交文件">#</a> 二、接下来是提交文件</h4>
<ol>
<li>新建仓库</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/VKYp3k8NMgDvrW1.jpg" alt=""></p>
<ol start="2">
<li>给仓库起个名</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/zsE5a7B3KrliXny.jpg" alt=""></p>
<ol start="3">
<li>复制仓库 <code>HTTPS</code>  链接</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/YVpZtKBoWgPbzme.jpg" alt=""></p>
<ol start="4">
<li>
<p>将 <code>text</code>  仓库 <code>clone</code>  到本地仓库，返回刚刚 <code>Git</code>  的窗口，输入 <code>git clone 链接</code> 。</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">git</span> clone https://github.com/aliang518/text.git</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/6KVx9MoJ48mE25k.jpg" alt=""></p>
<ol start="5">
<li>打开刚刚在电脑新建的 <code>text</code>  文件夹是不是存在一个 <code>GitHub</code>  上名为的 <code>text</code>  仓库</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/b7dHYj5e3lCxypg.jpg" alt=""></p>
<ol start="6">
<li>查看 <code>text</code>  仓库是不是和 <code>GitHub</code>  的仓库内容一样</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/g6nQxiVeCzubkNj.jpg" alt=""></p>
<ol start="7">
<li>
<p>新建一个文件</p>
<p><img data-src="https://s2.loli.net/2022/03/30/2emTn6GyiqSZIba.jpg" alt=""></p>
</li>
<li>
<p>在此文件夹下进入 <code>Git Bash Here</code></p>
</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/7bi2eu8FNYTltd1.jpg" alt=""></p>
<ol start="9">
<li>
<p>输入 <code>git status</code>  命令查看仓库状态</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">git</span> status</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204011752.jpg" alt="20"></p>
<ol start="10">
<li>
<p><code>hexo</code>  已经是一个 Git 仓库了，而我们刚刚创建的文件 <code>123.txt</code>  没有被追踪，也就是没有提交到本地仓库。现在我们使用  <code>git add </code> 命令将文件添加到了「临时缓冲区」，再用  <code>git commit -m &quot;</code> 提交信息&quot; 将其提交到本地仓库，如下图</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">git</span> <span class="token function">add</span> text.txt</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">git</span> commit -m <span class="token string">"提交信息"</span></pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/cK8LmrBq3vh9YQo.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/3ltIPmEFkHKU1Bc.jpg" alt=""></p>
<p>如果你是第一次提交的话，就会出现下图情况，让你输入账号和邮箱</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre>```git config --global user.name <span class="token string">"aliang518"</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">git</span> config --global user.email <span class="token string">"aa******56@126.com"</span></pre></td></tr></table></figure><p><img data-src="https://s2.loli.net/2022/03/30/Dbag4oklMAp1XqQ.jpg" alt=""></p>
<ol start="11">
<li>
<p>查看仓库提交日志</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">git</span> log</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/xCkvay35W4zG8gE.jpg" alt=""></p>
<ol start="12">
<li>
<p>再输入  <code>git status</code>  查看一下仓库状态</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">git</span> status</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/DKZzdOLexy1lB52.jpg" alt=""></p>
<ol start="13">
<li>
<p>将本地仓库提交到远程仓库</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">git</span> push origin main</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/rFebnLUxqSkCoR3.jpg" alt=""></p>
<ol start="14">
<li>从浏览器打开的时候选择你已经登录 <code>GitHub</code>  的那个浏览器 (我这里用火狐浏览器)</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/etGBbrAjaOzH9Qk.jpg" alt=""></p>
<ol start="15">
<li>等待上次成功</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/16UjrZte4OydkG8.jpg" alt=""></p>
<ol start="16">
<li>打开 <code>GitHub</code>  仓库 <code>F5</code>  刷新一下，会出现刚刚在本地 <code>text</code>  目录新建的 <code>text.txt</code>  文件</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/QvD1LZXAqeWSNJf.jpg" alt=""></p>
<p><strong>提交文件已经成功啦</strong></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo怎么安装插件</title>
    <url>/2022/03/26/c5de56d5.html</url>
    <content><![CDATA[<hr>
<h3 id="hexo怎么安装插件"><a class="markdownIt-Anchor" href="#hexo怎么安装插件">#</a> hexo 怎么安装插件</h3>
<ol>
<li>
<p>打开 hexo 的根目录 <code>Blog</code></p>
</li>
<li>
<p>输入安装地址 (此处我以安装 <code>npm i hexo-algoliasearch</code>  测试)</p>
<figure class="highlight bash"><figcaption data-lang="bash"><span>npm安装</span></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">npm</span> i hexo-algoliasearch</pre></td></tr></table></figure></li>
<li>
<p>安装成功</p>
</li>
</ol>
<p><img data-src="https://tva4.sinaimg.cn/large/0065wfS6ly8h0ntxuxa0oj30jo09njsv.jpg" alt="" title="在Blog打开cmd" height="65%" width="65%"></p>
<p><img data-src="https://tva2.sinaimg.cn/large/0065wfS6ly8h0ntxktk9zj30cr02gjrc.jpg" alt="" title="在cmd输入安装路径" height="65%" width="65%"></p>
<p><img data-src="https://tva3.sinaimg.cn/large/0065wfS6ly8h0nty14h5oj30lh07s0tg.jpg" alt="" title="END" height="65%" width="65%"></p>
<h3 id="hexo怎么卸载插件"><a class="markdownIt-Anchor" href="#hexo怎么卸载插件">#</a> Hexo 怎么卸载插件</h3>
<ol>
<li>
<p>卸载也是在 <code>Blog</code>  打开 cmd，输入 <code>npm uninstall 插件名 --save</code>  即可</p>
</li>
<li>
<p>或者简洁一点 <code>npm un 插件名 --save</code></p>
</li>
<li>
<p>举个例子，我要卸载 <code>hexo-renderer-marked</code>  这个插件</p>
</li>
<li>
<p>在 cmd 输入</p>
<figure class="highlight bash"><figcaption data-lang="bash"><span>h 插件卸载 </span></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">npm</span> un hexo-renderer-marked --save</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://tva2.sinaimg.cn/large/0065wfS6ly8h0ntxxz7wqj30lk0650t3.jpg" alt="" title="卸载插件" height="75%" width="75%"></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>模块</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第六篇：将博客部署到GitHub---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/dc09a46c.html</url>
    <content><![CDATA[<h2 id="将hexo部署到github"><a class="markdownIt-Anchor" href="#将hexo部署到github">#</a> 将 Hexo 部署到 github</h2>
<ol>
<li>打开 <code>blog</code>  文件夹，打开 <code>_config.yml</code>  文件</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/XsNufKGeyItOwnB.jpg" alt=""></p>
<ol start="2">
<li>滑到最下面找到如图</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/heHXcG2u1anBOAI.jpg" alt=""></p>
<ol start="3">
<li>
<p><code>打开仓库---&gt;code---&gt;SSH---&gt;copy</code> ，复制 <code>SSH</code>  的链接</p>
<p><img data-src="https://s2.loli.net/2022/03/30/ewWNlivjaSzXo2f.jpg" alt=""></p>
</li>
<li>
<p>填到 <code>步骤2 </code> 的文件中。如下图</p>
</li>
</ol>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/pmlipmng202204012026.jpg" alt=""></p>
<figure class="highlight yml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token key atrule">deploy</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git</pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>0000rookie/github.io.git</pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> main</pre></td></tr></table></figure><ol start="5">
<li>
<p>回到 <code>blog</code>  文件夹中，鼠标右键打开 <code>git bash here</code> ，安装 <code>git</code>  部署插件</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/3bDkNml7QBJVR6C.jpg" alt=""></p>
<ol start="6">
<li>
<p>依次输入以下三条命令，</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>hexo clean </pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre>hexo g</pre></td></tr><tr class="marked"><td data-num="3"></td><td><pre>hexo d</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/gucNPIbDdVnfw9v.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/ROfaZgmzFwec1ND.jpg" alt=""></p>
<ol start="7">
<li>
<p>这是浏览器打开 <code>https://aliang518.github.io/</code>  就是你的博客了</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>https://aliang518.github.io/</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/VeGUNhMdplYP5rz.jpg" alt=""></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第二篇：安装Git---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/859f60bd.html</url>
    <content><![CDATA[<h3 id="以下会用到的软件"><a class="markdownIt-Anchor" href="#以下会用到的软件">#</a> 以下会用到的软件</h3>
<p><strong>必装 [Git][<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbQ==">https://git-scm.com</span>]、[Node.js][<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2Vu">https://nodejs.org/en</span>]</strong> <em>(点击打开)</em></p>
<p><strong>建议装 [notepad3][<span class="exturl" data-url="aHR0cHM6Ly9yb29raWUxNjc5LmxhbnpvdWYuY29tL2lIbW1hMDI2bnZkZw==">https://rookie1679.lanzouf.com/iHmma026nvdg</span>]</strong> <em>(点击打开)</em></p>
<hr>
<h3 id="安装git"><a class="markdownIt-Anchor" href="#安装git">#</a> 安装 Git</h3>
<p><img data-src="https://s2.loli.net/2022/03/30/BQvOwdEjhy2Mxpi.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/cynKHCaWvM1lhPQ.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/mGnE9UXQfjSF4LA.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/5Y6oqd7uJGQZ3x9.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/7ulfP3VQJDIR49b.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/O71bgvBpnoya5UN.jpg" alt=""></p>
<p><img data-src="https://tva2.sinaimg.cn/large/0065wfS6ly8h0rsgp2d5yj30dv0aw756.jpg" alt="07"></p>
<p><img data-src="https://tva1.sinaimg.cn/large/0065wfS6ly8h0rshgpo17j30dv0aw74s.jpg" alt="9"></p>
<p><img data-src="https://s2.loli.net/2022/03/30/5yNqYXRIFf2kpxc.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/8j3PsJFgN6e1IxB.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/Pz4C6HLjdQiE7MB.jpg" alt=""></p>
<p><strong>鼠标右看到如图说明安装成功了，打开 Git bash here</strong></p>
<p><img data-src="https://s2.loli.net/2022/03/30/FbARg18aejdJUVO.jpg" alt=""></p>
<p><strong>输入 git</strong></p>
<p><img data-src="https://s2.loli.net/2022/03/30/7qTxPmE6YGFOklK.jpg" alt=""></p>
<p><strong>安装 git 结束</strong></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建GitHu图床</title>
    <url>/2022/04/02/e85071ad.html</url>
    <content><![CDATA[<p><strong>问：什么是图床？图床有什么用？</strong></p>
<p><strong>答：图床就是一个存放你照片的云盘，只要有网络就能打开这张照片</strong></p>
<h2 id="新建一个仓库"><a class="markdownIt-Anchor" href="#新建一个仓库">#</a> 新建一个仓库</h2>
<p><strong>用于存放图片的仓库</strong>  俗称图床<br>
<img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021048.jpg" alt=""></p>
<h2 id="给你图床起个名字"><a class="markdownIt-Anchor" href="#给你图床起个名字">#</a> 给你图床起个名字</h2>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021050.jpg" alt=""></p>
<h2 id="新建token"><a class="markdownIt-Anchor" href="#新建token">#</a> 新建 token</h2>
<p><code>settings---&gt;Developer settings---&gt;Personal access tokens---&gt;generate new token</code> <br>
<img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021051.jpg" alt=""><br>
<img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021059.jpg" alt=""><br>
<img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021100.jpg" alt=""><br>
<em> 这边给大家翻译一下，英文不是很好可以看看</em><br>
<img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021102.jpg" alt=""><br>
<img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021103.jpg" alt=""></p>
<p><strong>点击复制</strong></p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021105.jpg" alt=""></p>
<h2 id="配置picgo"><a class="markdownIt-Anchor" href="#配置picgo">#</a> 配置 Picgo</h2>
<div class="note info">
<p><strong>我在 imgs 仓库下新建了一个 Hexoimgs 文件夹</strong></p>
</div>
<p>粘贴刚刚复制的 <code>token</code>  到 <code>设定Token</code></p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021133.jpg" alt=""></p>
<p>你 <code>github</code>  上的分支名是什么， <code>PicGO的</code> 设定分支名就写什么</p>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/amliamng202204021131.jpg" alt=""></p>
<p><strong>设定自定义域名：</strong> <code>0000rookie/imgs</code>  改成你的 <code>用户名/仓库名</code></p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>http://cdn.jsdelivr.net/gh/0000rookie/imgs</pre></td></tr></table></figure><div class="note success">
<p><strong>你的图床就搭建完啦</strong></p>
</div>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>模块</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第五篇：安装Hexo---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/87b69652.html</url>
    <content><![CDATA[<h3 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo">#</a> 安装 Hexo</h3>
<ol>
<li>新建一个仓库</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/LoeECmrFSydhnIt.jpg" alt=""></p>
<ol start="2">
<li>给仓库起个名，格式为   <code>账号名.github.io</code></li>
</ol>
<p><img data-src="https://tva4.sinaimg.cn/large/0065wfS6ly8h0rslvrth9j31ha0pqq5w.jpg" alt=""></p>
<ol start="3">
<li>打开 <code>stetings</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/KaQX5eUTYvWp9H6.jpg" alt=""></p>
<ol start="4">
<li>滑到下面，找到这个 <code>GitHub pages</code>  ，点击打开</li>
</ol>
<p><img data-src="https://tva3.sinaimg.cn/large/0065wfS6ly8h0rsme8aiaj30p905tmx8.jpg" alt=""></p>
<ol start="5">
<li>出现以下图说明成功了</li>
</ol>
<p><img data-src="http://cdn.jsdelivr.net/gh/0000rookie/imgs/Hexoimgs/05.jpg" alt="05"></p>
<ol start="6">
<li>新建一个 <code>blog</code>  文件夹，在 <code>blog</code>  文件夹打开 <code>git bash here</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/w8UDo5gxLzbOtiu.jpg" alt="">7. 安装 <code>hexo-cli</code>  插件</p>
<figure class="highlight bash"><figcaption data-lang="bash"><span>h</span></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli</pre></td></tr></table></figure><p><img data-src="https://s2.loli.net/2022/03/30/IHBmwDz6FaGUyVW.jpg" alt=""></p>
<ol start="8">
<li>初始化博客</li>
</ol>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>hexo init</pre></td></tr></table></figure><p><img data-src="https://s2.loli.net/2022/03/30/X4pArW28NVYmuCa.jpg" alt=""></p>
<ol start="9">
<li>静态部署博客</li>
</ol>
<figure class="highlight bash"><figcaption data-lang="bash"><span>mark：1</span></figcaption><table><tr><td data-num="1"></td><td><pre>hexo g</pre></td></tr></table></figure><p><img data-src="https://tva1.sinaimg.cn/large/0065wfS6ly8h0rsqg2bmbj30l20gdtav.jpg" alt="09"></p>
<ol start="10">
<li>
<p>打开本地服务器</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre>hexo s</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/atwxZphQzjf2kTi.jpg" alt=""></p>
<ol start="11">
<li>
<p>浏览器输入 <code>localhost:4000</code>  查看</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre>localhost:4000</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://tva2.sinaimg.cn/large/0065wfS6ly8h0rsqxer30j31ha0opdiy.jpg" alt="10"></p>
<ol start="12">
<li><code>ctrl+s</code> ，停止本地服务器运行</li>
</ol>
<p><strong>目前博客已经基本完成了</strong></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第四篇：安装Nodejs---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/cf63c07.html</url>
    <content><![CDATA[<h2 id="nodejs安装及配置环境"><a class="markdownIt-Anchor" href="#nodejs安装及配置环境">#</a> Node.js 安装及配置环境</h2>
<h3 id="nodejs安装"><a class="markdownIt-Anchor" href="#nodejs安装">#</a>  <code>node.js</code>  安装</h3>
<ol>
<li>我这里安装在 <code>C:\app\nodejs</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/N2pSe6Oq9BVLjbK.png" alt=""></p>
<ol start="2">
<li>安装完之后打开 <code>cmd</code> ，输入 <code>node -v</code>  和 <code>npm -v</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/Cln8IqXUAWwdMBK.jpg" alt=""></p>
<h3 id="设置npm在安装全局模块时的路径和环境变量"><a class="markdownIt-Anchor" href="#设置npm在安装全局模块时的路径和环境变量">#</a> 设置 npm 在安装全局模块时的路径和环境变量</h3>
<p>如果不设置的话，安装模块是默认在 C 盘的，会占用 C 盘空间，我这边把安装路径修改一下，建议你也改一下。</p>
<ol>
<li>
<p>在 <code>nodejs</code>  下创建两个目录 <code>ndoe_cache</code>  和 <code>node_global</code></p>
<p><img data-src="https://s2.loli.net/2022/03/30/il5vILhOF76qTRs.png" alt=""></p>
</li>
<li>
<p>选择 <code>node_cache</code>  右击打开属性，把权限下的 “完全控制” 选上</p>
</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/o8THeYdwjvLzSmb.png" alt=""></p>
<ol start="3">
<li>同理，选择 <code>node_global</code>  右击打开属性，把权限下的 “完全控制” 也选上</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/iETUhyYIKm7q9FL.jpg" alt=""></p>
<ol start="4">
<li>复制 <code>node_global</code>  和 <code>node_cache</code>  的路径</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/Aw8O2gfGHMUWeku.jpg" alt=""></p>
<ol start="5">
<li>然后再返回刚刚打开的 cmd, 输入以下代码</li>
</ol>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">"C:<span class="token entity" title="\a">\a</span>pp<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_global"</span></pre></td></tr><tr class="marked"><td data-num="2"></td><td><pre><span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">"C:<span class="token entity" title="\a">\a</span>pp<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_cache"</span></pre></td></tr></table></figure><p><img data-src="https://s2.loli.net/2022/03/30/piUmIH6Zv9SO8c3.jpg" alt=""></p>
<ol start="6">
<li>
<p>设置完路径之后，我们还要去系统环境变量修改一下</p>
<p><strong>打开桌面 —&gt; 此电脑 —&gt; 属性 —&gt; 高级系统设置 —&gt; 环境变量</strong></p>
</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/FyrUTcpvfkuGBAP.jpg" alt=""></p>
<ol start="7">
<li>打开高级系统设置</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/QvpAOLeS53EbMj9.jpg" alt=""></p>
<ol start="8">
<li>打开环境变量</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/xVQKP2vjLJ83ztU.jpg" alt=""></p>
<ol start="9">
<li>在系统变量中新建一个变量，名为 <code>NODE_PATH</code> , 值为 <code>C:\app\nodejs\node_global\node_modules</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/53jV6FgzIcTXSM8.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/Ust62PMjuSJ9iWw.jpg" alt=""></p>
<ol start="10">
<li>然后编辑上方的用户变量的 Path, 编辑修改为 <code>C:\app\nodejs\node_global</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/btcT8qOj6dkENLX.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/dnw9lCxOqj1GAH2.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/nYmStTyWgz4bejo.jpg" alt=""></p>
<h3 id="全部变量修改结果如下图"><a class="markdownIt-Anchor" href="#全部变量修改结果如下图">#</a> 全部变量修改结果，如下图</h3>
<p><img data-src="https://s2.loli.net/2022/03/30/HUSnKtdhMBgvcOq.jpg" alt=""></p>
<ol>
<li>然后打开 <code>cmd</code>  测试一下路径设置和环境变量有没有设置正确，如果没有设置正确的话，在 <code>node_global</code>  是看不到有 <code>webpack</code>  文件夹的</li>
</ol>
<p><strong>安装过程</strong></p>
<p><img data-src="https://s2.loli.net/2022/03/30/FY1g5nJesScwHvC.jpg" alt=""></p>
<p><strong>安装成功</strong></p>
<p><img data-src="https://s2.loli.net/2022/03/30/8H7v1uoA3zn9WKs.jpg" alt=""></p>
<ol start="2">
<li>出现以下路径说明安装成功了 <code>node_global---&gt;node_modules---&gt;webpack</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/ugOVX3WGfpZ9DqP.jpg" alt=""></p>
<p><strong> <code>nodejs</code>  环境配置到此就完成啦</strong></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第九篇：安装主题---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/a5eefddc.html</url>
    <content><![CDATA[<h3 id="安装主题"><a class="markdownIt-Anchor" href="#安装主题">#</a> 安装主题</h3>
<ol>
<li>
<p>打开 <code>GitHub</code>  官网，搜索 <code>hexo theme</code></p>
<p><img data-src="https://s2.loli.net/2022/03/30/WgwRFXd4k1rOljn.jpg" alt=""></p>
</li>
<li>
<p>我这边选择 <code>diaspora</code>  这个</p>
</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/jqtLnIyD3UTrQJo.jpg" alt=""></p>
<ol start="3">
<li>打开项目，复制安装主题的链接</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/s9Fc15hAwPbUdpn.jpg" alt=""></p>
<ol start="4">
<li>
<p>在 blog 文件夹下鼠标右键打开 git bash here</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">git</span> clone https://github.com/Fechin/hexo-theme-diaspora.git themes/diaspora</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/VHYUXteDcQiSd89.jpg" alt=""></p>
<ol start="5">
<li>打开 <code>themes</code>  文件夹，看看主题是否有下载成功</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/2EV3nMIsKp5ozmJ.jpg" alt=""></p>
<ol start="6">
<li>主题下好之后打开 <code>_config.yml</code>  文件配置主题</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/NGtOr3hjyQYU1fe.jpg" alt=""></p>
<ol start="6">
<li>找到 <code>theme</code> ，修改为 <code>diaspora</code>  (也就是你的主题名，冒号后有一个空格不能省略)</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/wYXrnUu58TMZ1DA.jpg" alt=""></p>
<ol start="7">
<li>
<p>再打开 <code>git bash here</code> ，输入</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/SN1VlxAIpaFW5Lz.jpg" alt=""></p>
<ol start="8">
<li>打开你的博客，此时博客已经完全安装好了</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/6QznLrvacCsXjZT.jpg" alt=""></p>
<p><strong>博客已经漂漂亮亮了，可以愉快的开始写博客啦</strong></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>零基础搭建Hexo个人博客系列</title>
    <url>/2022/03/30/aaad0208.html</url>
    <content><![CDATA[<h3 id="零基础搭建hexo个人博客系列"><a class="markdownIt-Anchor" href="#零基础搭建hexo个人博客系列">#</a> 零基础搭建 Hexo 个人博客系列</h3>
<div class="links"><div class="item" title="第一篇：注册github" style="--block-color:#F46C9D;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvYTZmOWQwNzIuaHRtbA==" data-background-image="http://cdn.jsdelivr.net/gh/0000rookie/imgs/0 (5).png"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvYTZmOWQwNzIuaHRtbA==">第一篇：注册github</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div><div class="item" title="第二篇：安装Git" style="--block-color:#e9546b;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvODU5ZjYwYmQuaHRtbA==" data-background-image="http://cdn.jsdelivr.net/gh/0000rookie/imgs/0 (8).jpg"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvODU5ZjYwYmQuaHRtbA==">第二篇：安装Git</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div><div class="item" title="第三篇：Git提交文件" style="--block-color:#F4BAA4;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvYjc1YTFkYjYuaHRtbA==" data-background-image="http://cdn.jsdelivr.net/gh/0000rookie/imgs/0 (4).png"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvYjc1YTFkYjYuaHRtbA==">第三篇：Git提交文件</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div><div class="item" title="第四篇：安装Nodejs" style="--block-color:#FDBF5C;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvY2Y2M2MwNy5odG1s" data-background-image="http://cdn.jsdelivr.net/gh/0000rookie/imgs/0 (3).jpg"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvY2Y2M2MwNy5odG1s">第四篇：安装Nodejs</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div><div class="item" title="第五篇：安装Hexo" style="--block-color:#FBDE99;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvODdiNjk2NTIuaHRtbA==" data-background-image="http://cdn.jsdelivr.net/gh/0000rookie/imgs/0 (9).jpg"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvODdiNjk2NTIuaHRtbA==">第五篇：安装Hexo</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div><div class="item" title="第六篇：将博客部署到GitHub" style="--block-color:#5A8F2;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvZGMwOWE0NmMuaHRtbA==" data-background-image="http://cdn.jsdelivr.net/gh/0000rookie/imgs/0 (13).jpg"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvZGMwOWE0NmMuaHRtbA==">第六篇：将博客部署到GitHub</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div><div class="item" title="第七篇：购买域名" style="--block-color:#FB7B8E;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvNmMyMzkzZWMuaHRtbA==" data-background-image="http://cdn.jsdelivr.net/gh/0000rookie/imgs/0 (14).jpg"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvNmMyMzkzZWMuaHRtbA==">第七篇：购买域名</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div><div class="item" title="第八篇：解析域名" style="--block-color:#FF7BA8;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvOWJmNmNhZWYuaHRtbA==" data-background-image="http://cdn.jsdelivr.net/gh/0000rookie/imgs/0 (15).jpg"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvOWJmNmNhZWYuaHRtbA==">第八篇：解析域名</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div><div class="item" title="第九篇：安装主题" style="--block-color:#6AD0CB;"><span class="exturl image" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvYTVlZWZkZGMuaHRtbA==" data-background-image="https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg"></span>
          <div class="info">
          <span class="exturl title" data-url="aHR0cDovL2FsaWFuZy5saXZlLzIwMjIvMDMvMzAvYTVlZWZkZGMuaHRtbA==">第九篇：安装主题</span>
          <p class="desc">阿亮の小破站 & 搭建博客系列</p>
          </div></div></div>
<div class="note info">
<p>没有加速器打开 GitHub 可能会稍微有点慢，需要加速可以联系博主</p>
</div>
<div class="note success">
<p>希望你能找到属于自己的小破站</p>
</div>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇：注册github---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/a6f9d072.html</url>
    <content><![CDATA[<h3 id="注册github"><a class="markdownIt-Anchor" href="#注册github">#</a> 注册 GitHub</h3>
<p><img data-src="https://s2.loli.net/2022/03/30/BULpyk6thPbgJCD.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/fo8wzF7dvqNHaB4.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/aXwyhW3KM8cxYCb.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/RN62GDFVQU1YKB3.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/JzFGeTjb7BHKSQD.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/48GA7g1N2VacpJl.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/uN8PBgwFWOlApfU.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/shHQtoZVwcPrz2I.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/aZSU1FnDumqY2M7.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/PhUtuCQNlLHXAdG.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/pk9Gyi28uTFrXZY.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/8tjJkrGRb3NBsEW.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/FVivdNY8BLUfcSR.jpg" alt=""></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第八篇：解析域名---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/9bf6caef.html</url>
    <content><![CDATA[<h3 id="解析域名"><a class="markdownIt-Anchor" href="#解析域名">#</a> 解析域名</h3>
<ol>
<li>
<p>打开你的博客，复制你博客的网址</p>
<p><img data-src="https://s2.loli.net/2022/03/30/uV5sJkaBmqiRQcD.jpg" alt=""></p>
</li>
<li>
<p><code>ctrl+R</code> ，打开 <code>CMD</code>  , <code>ping</code>  你的博客网址不要 <code>https://</code> ，并复制 <code>IP</code>  地址</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr class="marked"><td data-num="1"></td><td><pre><span class="token function">ping</span> aliang518.github.io</pre></td></tr></table></figure><p><img data-src="https://s2.loli.net/2022/03/30/rYfdlxjLIZau8Ks.jpg" alt=""></p>
</li>
<li>
<p>打开 [万网][<span class="exturl" data-url="aHR0cHM6Ly93YW53YW5nLmFsaXl1bi5jb20=">https://wanwang.aliyun.com</span>]，支付宝登录</p>
<p><img data-src="https://s2.loli.net/2022/03/30/TurKz1nhG76RAs8.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/Ygtbio2C5ehcZRW.jpg" alt=""></p>
</li>
<li>
<p>打开控制台</p>
</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/e1SfM9CzU3b5il7.jpg" alt=""></p>
<ol start="5">
<li></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/uep3jrhgKPLW8w1.jpg" alt=""></p>
<ol start="6">
<li>打开域名</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/d4KxbkcSownO8vl.jpg" alt=""></p>
<ol start="7">
<li>域名列表</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/sz5CW2QUeD3ZXdR.jpg" alt=""></p>
<ol start="8">
<li>点击解析</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/bC6k4saZ35SJGPy.jpg" alt=""></p>
<ol start="9">
<li>添加记录</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/ec91KAoiDsPMEzB.jpg" alt=""></p>
<ol start="10">
<li>在 cmd 复制的 ip 地址粘贴上去</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/exACJOLdHjKiTuY.jpg" alt=""></p>
<ol start="11">
<li>再次添加记录</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/ILAd5kUt4FOeSPh.jpg" alt=""></p>
<ol start="12">
<li>启动</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/xC2EAWP9n1uNyHF.jpg" alt=""></p>
<ol start="13">
<li>打开 <code>blog</code>  下的 <code>source</code>  文件夹，创建一个文件名为 <code>CNAME</code> ，没有后缀的文件</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/sprnbtxY7GLHawd.jpg" alt=""></p>
<ol start="14">
<li>
<p>在 <code>CNAME</code>  文件里面填入你购买的域名</p>
<figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre>aliang.life</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/SrZdm4P7NinQpCg.jpg" alt=""></p>
<ol start="15">
<li>
<p>在 <code>blog</code>  下打开 <code>git bash here</code>  ，输入</p>
<figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d</pre></td></tr></table></figure></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/57FqvMVflem3UEs.jpg" alt=""></p>
<ol start="16">
<li>浏览器打开你的域名。域名解析成功</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/HIRYhTNcgpdJjmr.jpg" alt=""></p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>aliang.life</pre></td></tr></table></figure>]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>第七篇：购买域名---从0基础搭建Hexo博客</title>
    <url>/2022/03/30/6c2393ec.html</url>
    <content><![CDATA[<h2 id="购买域名"><a class="markdownIt-Anchor" href="#购买域名">#</a> 购买域名</h2>
<p><strong>打开 [万网官网][<span class="exturl" data-url="aHR0cHM6Ly93YW53YW5nLmFsaXl1bi5jb20=">https://wanwang.aliyun.com</span>]</strong></p>
<h3 id="注册账号"><a class="markdownIt-Anchor" href="#注册账号">#</a> 注册账号</h3>
<ol>
<li>我这里使用的是支付宝登录</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/rygEU1BWAnlkHLw.jpg" alt=""></p>
<h3 id="输入域名"><a class="markdownIt-Anchor" href="#输入域名">#</a> 输入域名</h3>
<ol start="2">
<li>输入自己想要的域名，搜索</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/4CnXuINvtWgTe7Q.jpg" alt=""></p>
<ol start="3">
<li>
<p><img data-src="https://s2.loli.net/2022/03/30/YVbD4TrPzAklFti.jpg" alt=""></p>
</li>
<li>
<p>点击立即购买</p>
</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/DeVr86NbnHGTs2d.jpg" alt=""></p>
<ol start="5">
<li>选择年限</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/cWOQ3Lakhi8V2Kt.jpg" alt=""></p>
<ol start="6">
<li>将域名持有者选为 “个人”</li>
<li>新建信息模板</li>
<li>选择你填的资料</li>
<li>验证邮箱 (点击 <code>去验证</code> )</li>
<li>立即购买</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/ykFrIJputCAawbq.jpg" alt=""></p>
<p><img data-src="https://s2.loli.net/2022/03/30/93TRVgPZxYrnhA7.jpg" alt=""></p>
<ol start="11">
<li>支付成功，点击进入域名控制台</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/Q1JWYLqxVKmCshf.jpg" alt=""></p>
<ol start="12">
<li>等待审核。(我这边审核大概半小时就好了)</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/30/KsrTi1u3pqna2Ue.jpg" alt=""></p>
]]></content>
      <categories>
        <category>计算机科学</category>
        <category>博客</category>
        <category>零基础搭建Hexo个人博客系列</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
</search>
